@using Microsoft.AspNetCore.Identity;
@model IEnumerable<WebApplication3.Models.ObiektywViewModel>
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@{
    ViewData["Title"] = "Lens List";
    IdentityUser user;
    IList<String> roles;
}
@section PageHead{
    <div class="container">
        <h3>Hello, this is @ViewData["Title"]</h3>
        <h4>Here, You can see all lens models currently in the database</h4>
    </div>}
<h1 class="bg-info text-white">List</h1>

<p>
    <a class="btn btn-secondary" asp-action="Create">Create</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Producent)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.KrajPochodzenia)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Model)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.RokProdukcji)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Waga)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Staloogniskowy)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.OgniskowaMin)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.OgniskowaMax)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PrzesłonaMax)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PrzesłonaMin)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Bagnet)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Producent)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.KrajPochodzenia)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Model)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.RokProdukcji)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Waga)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Staloogniskowy)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.OgniskowaMin)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.OgniskowaMax)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PrzesłonaMax)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PrzesłonaMin)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Bagnet.Typ)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                    @Html.ActionLink("Add To Bag", "AddObiektywToEquipmentBag", "EquipmentBag", new { id = item.Id }) |
                    @if (SignInManager.IsSignedIn(User))
                    {
                        user = await UserManager.FindByNameAsync(User.Identity.Name);
                        roles = await UserManager.GetRolesAsync(user);
                        @if (roles.Contains("Admin"))
                        {<a asp-action="Delete" asp-route-id="@item.Id">Delete</a>  }
                    }
                </td>
            </tr>
        }
    </tbody>
</table>
